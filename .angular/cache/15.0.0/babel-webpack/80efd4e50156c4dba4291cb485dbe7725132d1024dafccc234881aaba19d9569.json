{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ItemService {\n  constructor(http) {\n    this.http = http;\n    this.url = 'https://random-data-api.com/api/company/random_company';\n    this.collectionSize = 0;\n  }\n  getItems() {\n    return this.http.get('https://random-data-api.com/api/company/random_company?size=20');\n  }\n  getItem(id) {\n    const urlID = `${this.url}?${id}`;\n    return this.http.get(urlID);\n  }\n}\nItemService.ɵfac = function ItemService_Factory(t) {\n  return new (t || ItemService)(i0.ɵɵinject(i1.HttpClient));\n};\nItemService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ItemService,\n  factory: ItemService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,UAAU,QAAY,MAAM;;;AAMrC,OAAM,MAAOC,WAAW;EAKpBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,QAAG,GAAG,wDAAwD;IAC/D,mBAAc,GAAW,CAAC;EAIjC;EAEOC,QAAQ;IACb,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,gEAAgE,CAAC;EACxF;EAEOC,OAAO,CAACC,EAAS;IACpB,MAAMC,KAAK,GAAG,GAAG,IAAI,CAACC,GAAG,IAAIF,EAAE,EAAE;IACjC,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAOG,KAAK,CAAC;EACrC;;;mBAhBSP,WAAW;AAAA;;SAAXA,WAAW;EAAAS,SAAXT,WAAW;EAAAU,YAFV;AAAM","names":["Observable","ItemService","constructor","http","getItems","get","getItem","id","urlID","url","factory","providedIn"],"sourceRoot":"","sources":["D:\\projects\\angular_test_task\\src\\app\\services\\item.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { Item } from '../interfaces/item';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemService {\n\n    private url = 'https://random-data-api.com/api/company/random_company';\n    public collectionSize: number = 0;\n\n    constructor(private http: HttpClient) {\n\n    }\n\n    public getItems(): Observable<any> {\n      return this.http.get('https://random-data-api.com/api/company/random_company?size=20');\n    };\n\n    public getItem(id:number): Observable<Item>  {\n        const urlID = `${this.url}?${id}`;\n        return this.http.get<Item>(urlID);\n    };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}