{"ast":null,"code":"////// For apps with both Http and HttpClient ////\nimport * as ɵngcc0 from '@angular/core';\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { NgModule } from '@angular/core';\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\nimport { InMemoryBackendConfig, InMemoryDbService } from './interfaces';\nimport { httpClientInMemBackendServiceFactory } from './http-client-in-memory-web-api.module';\nvar InMemoryWebApiModule = /** @class */function () {\n  function InMemoryWebApiModule() {}\n  InMemoryWebApiModule_1 = InMemoryWebApiModule;\n  /**\r\n  *  Redirect BOTH Angular `Http` and `HttpClient` XHR calls\r\n  *  to in-memory data store that implements `InMemoryDbService`.\r\n  *  with class that implements InMemoryDbService and creates an in-memory database.\r\n  *\r\n  *  Usually imported in the root application module.\r\n  *  Can import in a lazy feature module too, which will shadow modules loaded earlier\r\n  *\r\n  * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\r\n  * @param {InMemoryBackendConfigArgs} [options]\r\n  *\r\n  * @example\r\n  * InMemoryWebApiModule.forRoot(dbCreator);\r\n  * InMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\r\n  */\n  InMemoryWebApiModule.forRoot = function (dbCreator, options) {\n    return {\n      ngModule: InMemoryWebApiModule_1,\n      providers: [{\n        provide: InMemoryDbService,\n        useClass: dbCreator\n      }, {\n        provide: InMemoryBackendConfig,\n        useValue: options\n      }, {\n        provide: HttpBackend,\n        useFactory: httpClientInMemBackendServiceFactory,\n        deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory]\n      }]\n    };\n  };\n  /**\r\n   *\r\n   * Enable and configure the in-memory web api in a lazy-loaded feature module.\r\n   * Same as `forRoot`.\r\n   * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\r\n   */\n  InMemoryWebApiModule.forFeature = function (dbCreator, options) {\n    return InMemoryWebApiModule_1.forRoot(dbCreator, options);\n  };\n  var InMemoryWebApiModule_1;\n  InMemoryWebApiModule.ɵfac = function InMemoryWebApiModule_Factory(t) {\n    return new (t || InMemoryWebApiModule)();\n  };\n  InMemoryWebApiModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: InMemoryWebApiModule\n  });\n  InMemoryWebApiModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({});\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InMemoryWebApiModule, [{\n      type: NgModule,\n      args: [{}]\n    }], function () {\n      return [];\n    }, null);\n  })();\n  return InMemoryWebApiModule;\n}();\nexport { InMemoryWebApiModule };","map":{"version":3,"names":["ɵngcc0","__decorate","decorators","target","key","desc","c","arguments","length","r","Object","getOwnPropertyDescriptor","d","Reflect","decorate","i","defineProperty","NgModule","HttpBackend","XhrFactory","InMemoryBackendConfig","InMemoryDbService","httpClientInMemBackendServiceFactory","InMemoryWebApiModule","InMemoryWebApiModule_1","forRoot","dbCreator","options","ngModule","providers","provide","useClass","useValue","useFactory","deps","forFeature","ɵfac","InMemoryWebApiModule_Factory","t","ɵmod","ɵɵdefineNgModule","type","ɵinj","ɵɵdefineInjector","ngDevMode","ɵsetClassMetadata","args"],"sources":["D:/projects/angular-embedika-master/node_modules/angular-in-memory-web-api/__ivy_ngcc__/in-memory-web-api.module.js"],"sourcesContent":["////// For apps with both Http and HttpClient ////\r\nimport * as ɵngcc0 from '@angular/core';\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpBackend, XhrFactory } from '@angular/common/http';\r\nimport { InMemoryBackendConfig, InMemoryDbService } from './interfaces';\r\nimport { httpClientInMemBackendServiceFactory } from './http-client-in-memory-web-api.module';\r\nvar InMemoryWebApiModule = /** @class */ (function () {\r\n    function InMemoryWebApiModule() {\r\n    }\r\n    InMemoryWebApiModule_1 = InMemoryWebApiModule;\r\n    /**\r\n    *  Redirect BOTH Angular `Http` and `HttpClient` XHR calls\r\n    *  to in-memory data store that implements `InMemoryDbService`.\r\n    *  with class that implements InMemoryDbService and creates an in-memory database.\r\n    *\r\n    *  Usually imported in the root application module.\r\n    *  Can import in a lazy feature module too, which will shadow modules loaded earlier\r\n    *\r\n    * @param {Type} dbCreator - Class that creates seed data for in-memory database. Must implement InMemoryDbService.\r\n    * @param {InMemoryBackendConfigArgs} [options]\r\n    *\r\n    * @example\r\n    * InMemoryWebApiModule.forRoot(dbCreator);\r\n    * InMemoryWebApiModule.forRoot(dbCreator, {useValue: {delay:600}});\r\n    */\r\n    InMemoryWebApiModule.forRoot = function (dbCreator, options) {\r\n        return {\r\n            ngModule: InMemoryWebApiModule_1,\r\n            providers: [\r\n                { provide: InMemoryDbService, useClass: dbCreator },\r\n                { provide: InMemoryBackendConfig, useValue: options },\r\n                { provide: HttpBackend,\r\n                    useFactory: httpClientInMemBackendServiceFactory,\r\n                    deps: [InMemoryDbService, InMemoryBackendConfig, XhrFactory] }\r\n            ]\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * Enable and configure the in-memory web api in a lazy-loaded feature module.\r\n     * Same as `forRoot`.\r\n     * This is a feel-good method so you can follow the Angular style guide for lazy-loaded modules.\r\n     */\r\n    InMemoryWebApiModule.forFeature = function (dbCreator, options) {\r\n        return InMemoryWebApiModule_1.forRoot(dbCreator, options);\r\n    };\r\n    var InMemoryWebApiModule_1;\nInMemoryWebApiModule.ɵfac = function InMemoryWebApiModule_Factory(t) { return new (t || InMemoryWebApiModule)(); };\nInMemoryWebApiModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: InMemoryWebApiModule });\nInMemoryWebApiModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(InMemoryWebApiModule, [{\n        type: NgModule,\n        args: [{}]\n    }], function () { return []; }, null); })();\r\n    return InMemoryWebApiModule;\r\n}());\r\nexport { InMemoryWebApiModule };\r\n\n"],"mappings":"AAAA;AACA,OAAO,KAAKA,MAAM,MAAM,eAAe;AACvC,IAAIC,UAAU,GAAI,IAAI,IAAI,IAAI,CAACA,UAAU,IAAK,UAAUC,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,EAAE;EACnF,IAAIC,CAAC,GAAGC,SAAS,CAACC,MAAM;IAAEC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGH,MAAM,GAAGE,IAAI,KAAK,IAAI,GAAGA,IAAI,GAAGK,MAAM,CAACC,wBAAwB,CAACR,MAAM,EAAEC,GAAG,CAAC,GAAGC,IAAI;IAAEO,CAAC;EAC5H,IAAI,OAAOC,OAAO,KAAK,QAAQ,IAAI,OAAOA,OAAO,CAACC,QAAQ,KAAK,UAAU,EAAEL,CAAC,GAAGI,OAAO,CAACC,QAAQ,CAACZ,UAAU,EAAEC,MAAM,EAAEC,GAAG,EAAEC,IAAI,CAAC,CAAC,KAC1H,KAAK,IAAIU,CAAC,GAAGb,UAAU,CAACM,MAAM,GAAG,CAAC,EAAEO,CAAC,IAAI,CAAC,EAAEA,CAAC,EAAE,EAAE,IAAIH,CAAC,GAAGV,UAAU,CAACa,CAAC,CAAC,EAAEN,CAAC,GAAG,CAACH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACH,CAAC,CAAC,GAAGH,CAAC,GAAG,CAAC,GAAGM,CAAC,CAACT,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,GAAGG,CAAC,CAACT,MAAM,EAAEC,GAAG,CAAC,KAAKK,CAAC;EACjJ,OAAOH,CAAC,GAAG,CAAC,IAAIG,CAAC,IAAIC,MAAM,CAACM,cAAc,CAACb,MAAM,EAAEC,GAAG,EAAEK,CAAC,CAAC,EAAEA,CAAC;AACjE,CAAC;AACD,SAASQ,QAAQ,QAAQ,eAAe;AACxC,SAASC,WAAW,EAAEC,UAAU,QAAQ,sBAAsB;AAC9D,SAASC,qBAAqB,EAAEC,iBAAiB,QAAQ,cAAc;AACvE,SAASC,oCAAoC,QAAQ,wCAAwC;AAC7F,IAAIC,oBAAoB,GAAG,aAAe,YAAY;EAClD,SAASA,oBAAoB,GAAG,CAChC;EACAC,sBAAsB,GAAGD,oBAAoB;EAC7C;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIA,oBAAoB,CAACE,OAAO,GAAG,UAAUC,SAAS,EAAEC,OAAO,EAAE;IACzD,OAAO;MACHC,QAAQ,EAAEJ,sBAAsB;MAChCK,SAAS,EAAE,CACP;QAAEC,OAAO,EAAET,iBAAiB;QAAEU,QAAQ,EAAEL;MAAU,CAAC,EACnD;QAAEI,OAAO,EAAEV,qBAAqB;QAAEY,QAAQ,EAAEL;MAAQ,CAAC,EACrD;QAAEG,OAAO,EAAEZ,WAAW;QAClBe,UAAU,EAAEX,oCAAoC;QAChDY,IAAI,EAAE,CAACb,iBAAiB,EAAED,qBAAqB,EAAED,UAAU;MAAE,CAAC;IAE1E,CAAC;EACL,CAAC;EACD;AACJ;AACA;AACA;AACA;AACA;EACII,oBAAoB,CAACY,UAAU,GAAG,UAAUT,SAAS,EAAEC,OAAO,EAAE;IAC5D,OAAOH,sBAAsB,CAACC,OAAO,CAACC,SAAS,EAAEC,OAAO,CAAC;EAC7D,CAAC;EACD,IAAIH,sBAAsB;EAC9BD,oBAAoB,CAACa,IAAI,GAAG,SAASC,4BAA4B,CAACC,CAAC,EAAE;IAAE,OAAO,KAAKA,CAAC,IAAIf,oBAAoB,GAAG;EAAE,CAAC;EAClHA,oBAAoB,CAACgB,IAAI,GAAG,aAAcvC,MAAM,CAACwC,gBAAgB,CAAC;IAAEC,IAAI,EAAElB;EAAqB,CAAC,CAAC;EACjGA,oBAAoB,CAACmB,IAAI,GAAG,aAAc1C,MAAM,CAAC2C,gBAAgB,CAAC,CAAC,CAAC,CAAC;EACrE,CAAC,YAAY;IAAE,CAAC,OAAOC,SAAS,KAAK,WAAW,IAAIA,SAAS,KAAK5C,MAAM,CAAC6C,iBAAiB,CAACtB,oBAAoB,EAAE,CAAC;MAC1GkB,IAAI,EAAExB,QAAQ;MACd6B,IAAI,EAAE,CAAC,CAAC,CAAC;IACb,CAAC,CAAC,EAAE,YAAY;MAAE,OAAO,EAAE;IAAE,CAAC,EAAE,IAAI,CAAC;EAAE,CAAC,GAAG;EAC3C,OAAOvB,oBAAoB;AAC/B,CAAC,EAAG;AACJ,SAASA,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}