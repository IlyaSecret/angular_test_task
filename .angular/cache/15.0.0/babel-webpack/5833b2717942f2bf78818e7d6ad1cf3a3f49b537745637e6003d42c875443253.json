{"ast":null,"code":"import { Observable } from 'rxjs';\n// Replaces use of RxJS delay. See v0.5.4.\n/** adds specified delay (in ms) to both next and error channels of the response observable */\nexport function delayResponse(response$, delayMs) {\n  return new Observable(function (observer) {\n    var completePending = false;\n    var nextPending = false;\n    var subscription = response$.subscribe(function (value) {\n      nextPending = true;\n      setTimeout(function () {\n        observer.next(value);\n        if (completePending) {\n          observer.complete();\n        }\n      }, delayMs);\n    }, function (error) {\n      return setTimeout(function () {\n        return observer.error(error);\n      }, delayMs);\n    }, function () {\n      completePending = true;\n      if (!nextPending) {\n        observer.complete();\n      }\n    });\n    return function () {\n      return subscription.unsubscribe();\n    };\n  });\n}","map":{"version":3,"names":["Observable","delayResponse","response$","delayMs","observer","completePending","nextPending","subscription","subscribe","value","setTimeout","next","complete","error","unsubscribe"],"sources":["D:/projects/angular-embedika-master/node_modules/angular-in-memory-web-api/__ivy_ngcc__/delay-response.js"],"sourcesContent":["import { Observable } from 'rxjs';\r\n// Replaces use of RxJS delay. See v0.5.4.\r\n/** adds specified delay (in ms) to both next and error channels of the response observable */\r\nexport function delayResponse(response$, delayMs) {\r\n    return new Observable(function (observer) {\r\n        var completePending = false;\r\n        var nextPending = false;\r\n        var subscription = response$.subscribe(function (value) {\r\n            nextPending = true;\r\n            setTimeout(function () {\r\n                observer.next(value);\r\n                if (completePending) {\r\n                    observer.complete();\r\n                }\r\n            }, delayMs);\r\n        }, function (error) { return setTimeout(function () { return observer.error(error); }, delayMs); }, function () {\r\n            completePending = true;\r\n            if (!nextPending) {\r\n                observer.complete();\r\n            }\r\n        });\r\n        return function () {\r\n            return subscription.unsubscribe();\r\n        };\r\n    });\r\n}\r\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,MAAM;AACjC;AACA;AACA,OAAO,SAASC,aAAa,CAACC,SAAS,EAAEC,OAAO,EAAE;EAC9C,OAAO,IAAIH,UAAU,CAAC,UAAUI,QAAQ,EAAE;IACtC,IAAIC,eAAe,GAAG,KAAK;IAC3B,IAAIC,WAAW,GAAG,KAAK;IACvB,IAAIC,YAAY,GAAGL,SAAS,CAACM,SAAS,CAAC,UAAUC,KAAK,EAAE;MACpDH,WAAW,GAAG,IAAI;MAClBI,UAAU,CAAC,YAAY;QACnBN,QAAQ,CAACO,IAAI,CAACF,KAAK,CAAC;QACpB,IAAIJ,eAAe,EAAE;UACjBD,QAAQ,CAACQ,QAAQ,EAAE;QACvB;MACJ,CAAC,EAAET,OAAO,CAAC;IACf,CAAC,EAAE,UAAUU,KAAK,EAAE;MAAE,OAAOH,UAAU,CAAC,YAAY;QAAE,OAAON,QAAQ,CAACS,KAAK,CAACA,KAAK,CAAC;MAAE,CAAC,EAAEV,OAAO,CAAC;IAAE,CAAC,EAAE,YAAY;MAC5GE,eAAe,GAAG,IAAI;MACtB,IAAI,CAACC,WAAW,EAAE;QACdF,QAAQ,CAACQ,QAAQ,EAAE;MACvB;IACJ,CAAC,CAAC;IACF,OAAO,YAAY;MACf,OAAOL,YAAY,CAACO,WAAW,EAAE;IACrC,CAAC;EACL,CAAC,CAAC;AACN"},"metadata":{},"sourceType":"module","externalDependencies":[]}